"""
Django settings for order_management project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-s568^9^0lpjespwkk35%oplab(g9q_3@26d%3n9%0ddhuo=t9s"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["127.0.0.1:8000", "127.0.0.1"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "common",
    "add_order_app",
    "delete_order_app",
    "find_order_app",
    "show_orders_app",
    "change_status_app",
    "calculation_app",
    "list_product_app",
    "edit_order_app",
    "table_app",
    "home",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "common.middleware.ExceptionHandlerMiddleware",
]

ROOT_URLCONF = "order_management.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]


WSGI_APPLICATION = "order_management.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Tbilisi"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [BASE_DIR / "static"]
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

LOGGING = {
    "version": 1,  # Версия формата конфигурации
    "disable_existing_loggers": False,  # Не отключать существующие логгеры
    # Форматеры
    "formatters": {
        "verbose": {
            "format": "{asctime} - {levelname} - {message}",
            "style": "{",
        },
        "simple": {
            "format": "{asctime} - {levelname}  - {message}",
            "style": "{",
        },
    },
    # Обработчики
    "handlers": {
        "console": {
            "level": "INFO",  # Уровень логирования
            "class": "logging.StreamHandler",  # Вывод в консоль
            "formatter": "simple",  # Используемый форматер
        },
        "file": {
            "level": "WARNING",
            "class": "logging.FileHandler",  # Запись в файл
            "filename": os.path.join(BASE_DIR, "logs/django.log"),  # Путь к файлу
            "formatter": "verbose",
        },
    },
    # Логгеры
    "loggers": {
        "info": {
            "handlers": ["console"],  # Используемые обработчики
            "level": "INFO",  # Уровень логирования
            "propagate": True,  # Передавать сообщения родительским логгерам
        },
        "warning": {
            "handlers": ["console", "file"],
            "level": "WARNING",
            "propagate": True,
        },
    },
}
